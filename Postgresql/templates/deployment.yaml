apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ .Values.component}}-pg-deployment
spec:
  replicas: {{ .Values.replicaCount}}
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: {{ .Release.Name }}-postgres
          image: {{ .Values.image.repository}}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote}}
          ports:
            - containerPort: {{ .Values.containerport}}
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-{{ .Values.component}}-pg-config
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-{{ .Values.component}}-pg-config
                  key: POSTGRES_DB
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-{{ .Values.component}}-pg-config
                  key: POSTGRES_USER
            - name: PGDATA
              value: /var/lib/postgresql/data
{{- if eq .Values.persistence.enabled true}}          
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgredb
              subPath: postgres
      volumes:
        - name: postgredb
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-{{ .Values.component}}-pg-pvc
{{- end}}
password